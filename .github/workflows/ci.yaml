# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker-image-build:
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        service:
          - build-android
          - build-evergreen
          - build-linux
          - build-linux-stub
          - build-raspi

    runs-on: ubuntu-latest
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 
      
      - name: Get docker file changes
        id: changed-files
        uses: tj-actions/changed-files@v13.1
        with:
          files: |
            docker-compose.yml
            docker/**

      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ (steps.changed-files.outputs.any_changed == 'true') && (github.event_name != 'pull_request') }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Retrieve Docker metadata
        if: steps.changed-files.outputs.any_changed == 'true'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/cobalt-${{ matrix.service }} 

      - name: Build containers with docker-compose
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: smartlyio/docker-compose-action@v1
        with:
          serviceName: ${{ matrix.service }}
          build: false
          push: "on:push"
          composeArguments: "--no-start"

      - name: Tag images
        if: steps.changed-files.outputs.any_changed == 'true'
        run: docker tag cobalt-${{ matrix.service }} ${{ steps.meta.outputs.tags }}

      - name: Push images
        if: ${{ (steps.changed-files.outputs.any_changed == 'true') && (github.event_name != 'pull_request') }}
        run: docker push ${{ steps.meta.outputs.tags }}

  # Raspi Jobs.
  raspi:
    needs: docker-image-build
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, X64]
    name: ${{matrix.platform}}-${{matrix.config}}
    # Create config matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [raspi-2,
                   raspi-2-skia,
                   raspi-2-sbversion-12,
                   raspi-2-sbversion-13]
        config: [devel, debug, gold, qa]
      # The container to run the job in.
    container: ghcr.io/isarkis/cobalt-build-raspi:main
    # Steps represent a sequence of tasks that will be executed as part of the job
    env:
      IS_CI: 1
      IS_DOCKER: 1
      PLATFORM: raspi-2
      CONFIG: ${{ matrix.config }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
      # Run build
      - name: ${{matrix.platform}}-${{matrix.config}}
        run: |
          export PYTHONPATH=$GITHUB_WORKSPACE
          gn gen $GITHUB_WORKSPACE/out/$PLATFORM_${{ matrix.config }} --args="target_platform=\"$PLATFORM\" build_type=\"${{ matrix.config }}\" target_cpu=\"arm\" is_clang=false"
          ninja -v -C $GITHUB_WORKSPACE/out/$PLATFORM_${{ matrix.config }} all
  
  # Evergreen x86 jobs.
  evergreen-x86:
    needs: docker-image-build
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, X64]
    name: ${{matrix.platform}}-${{matrix.config}}
    env:
      IS_CI: 1
      IS_DOCKER: 1
      PLATFORM: evergreen-x86
      CONFIG: ${{ matrix.config }}
      TARGET_CPU: x86
    # Create config matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [evergreen-x86,
                   evergreen-x86-sbversion-14,
                   evergreen-x86-sbversion-13,
                   evergreen-x86-sbversion-12]
        config: [devel, debug, gold, qa]
    container: ghcr.io/isarkis/cobalt-build-evergreen:main
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
      # Run build
      - name: ${{matrix.platform}}-${{matrix.config}}
        run: |
          export PYTHONPATH=$GITHUB_WORKSPACE
          gn gen $GITHUB_WORKSPACE/out/$PLATFORM_${{ matrix.config }} --args="target_platform=\"$PLATFORM\" build_type=\"${{ matrix.config }}\" target_cpu=\"$TARGET_CPU\" is_clang=false"
          ninja -v -C $GITHUB_WORKSPACE/out/$PLATFORM_${{ matrix.config }} all
  
  # Linux jobs.
  linux:
    needs: docker-image-build
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, X64]
    name: ${{matrix.platform}}-${{matrix.config}}
    # Create config matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [linux-x64x11,
                   linux-x64x11-egl,
                   linux-x64x11-sbversion-11,
                   linux-x64x11-sbversion-12,
                   linux-x64x11-sbversion-13,
                   linux-x64x11-skia]
        config: [devel, debug]
    container: ghcr.io/isarkis/cobalt-build-linux:main
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
      # Run build
      - name: ${{matrix.platform}}-${{matrix.config}}
        run: |
          $GITHUB_WORKSPACE/cobalt/build/gyp_cobalt -v -C ${{ matrix.config }} ${{ matrix.platform }}
          ninja -v -j 30 -C $GITHUB_WORKSPACE/out/${{ matrix.platform }}_${{ matrix.config }} eztime_test_deploy nplb_deploy app_launcher_zip
  
  # Android jobs.
  android:
    needs: docker-image-build
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, X64]
    name: ${{matrix.platform}}-${{matrix.config}}
    # Create config matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [android-arm64, android-arm, android-x86]
        config: [devel, debug]
    container: ghcr.io/isarkis/cobalt-build-android:main
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
      # Run build
      - name: ${{matrix.platform}}-${{matrix.config}}
        run: |
          $GITHUB_WORKSPACE/cobalt/build/gyp_cobalt -v -C ${{ matrix.config }} ${{ matrix.platform }}
          ninja -v -j 30 -C $GITHUB_WORKSPACE/out/${{ matrix.platform }}_${{ matrix.config }} eztime_test_deploy nplb_deploy app_launcher_zip

  # Win-Win32 Jobs.
  #win-win32:
  #  needs: docker-image-build
    # The type of runner that the job will run on
    #  runs-on: [self-hosted, X64, windows]
    #name: ${{matrix.platform}}-${{matrix.config}}
    # Create config matrix
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    platform: [win-win32]
    #    config: [devel, debug]
    # Steps represent a sequence of tasks that will be executed as part of the job
    #steps:
      # Checkout cobalt repo.
      # - uses: actions/checkout@v2
      # Run build
      # - name: echo
      #  run: |
      #    powershell echo ${{matrix.platform}}-${{matrix.config}}
  # Linux jobs.
  linux:
    needs: docker-image-build
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, X64]
    name: ${{matrix.platform}}-${{matrix.config}}
    # Create config matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [linux-x64x11,
                   linux-x64x11-egl,
                   linux-x64x11-sbversion-11,
                   linux-x64x11-sbversion-12,
                   linux-x64x11-sbversion-13,
                   linux-x64x11-skia]
        config: [devel, debug]
    container: ghcr.io/isarkis/cobalt-build-linux:main
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
      # Run build
      - name: ${{matrix.platform}}-${{matrix.config}}
        run: |
          $GITHUB_WORKSPACE/cobalt/build/gyp_cobalt -v -C ${{ matrix.config }} ${{ matrix.platform }}
          ninja -v -j 30 -C $GITHUB_WORKSPACE/out/${{ matrix.platform }}_${{ matrix.config }} eztime_test_deploy nplb_deploy app_launcher_zip
  
  # Android jobs.
  android:
    needs: docker-image-build
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, X64]
    name: ${{matrix.platform}}-${{matrix.config}}
    # Create config matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [android-arm64, android-arm, android-x86]
        config: [devel, debug]
    container: ghcr.io/isarkis/cobalt-build-android:main
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
      # Run build
      - name: ${{matrix.platform}}-${{matrix.config}}
        run: |
          $GITHUB_WORKSPACE/cobalt/build/gyp_cobalt -v -C ${{ matrix.config }} ${{ matrix.platform }}
          ninja -v -j 30 -C $GITHUB_WORKSPACE/out/${{ matrix.platform }}_${{ matrix.config }} eztime_test_deploy nplb_deploy app_launcher_zip

  # Win-Win32 Jobs.
  #win-win32:
  #  needs: docker-image-build
    # The type of runner that the job will run on
    #  runs-on: [self-hosted, X64, windows]
    #name: ${{matrix.platform}}-${{matrix.config}}
    # Create config matrix
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    platform: [win-win32]
    #    config: [devel, debug]
    # Steps represent a sequence of tasks that will be executed as part of the job
    #steps:
      # Checkout cobalt repo.
      # - uses: actions/checkout@v2
      # Run build
      # - name: echo
      #  run: |
      #    powershell echo ${{matrix.platform}}-${{matrix.config}}
