name: Docker Image Build
description: Builds Cobalt build docker images.
inputs:
  platform:
    description: "Cobalt platform for which to build docker build image."
    required: true
outputs:
  docker_tag:
    description: "Docker image tag generated by this action."
    value: ${{ steps.set-docker-tag-output.outputs.docker_tag }}
runs:
  using: "composite"
  steps:
    - name: Get docker file changes
      id: changed-files
      uses: tj-actions/changed-files@v13.1
      with:
        files: |
          docker-compose.yml
          docker/linux/**
          .github/actions/docker/**
    - id: get-docker-service
      run: |
        export docker_service=$(cat ${GITHUB_WORKSPACE}/.github/config/${{ inputs.platform }}.json | jq -r '.docker_service')
        echo "::set-output name=docker_service::$docker_service"
        echo "docker_service=$docker_service" >> $GITHUB_ENV
        echo $docker_service
      shell: bash
    - name: Retrieve Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/cobalt-${{ env.docker_service }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
    - name: Build containers with docker-compose
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: smartlyio/docker-compose-action@v1
      with:
        serviceName: ${{ env.docker_service }}
        build: false
        push: "on:push"
        composeArguments: "--no-start"
    - name: Tag images
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        docker tag cobalt-${{ env.docker_service }} ${{ steps.meta.outputs.tags }}
      shell: bash
    - name: Push images
      if: ${{ (steps.changed-files.outputs.any_changed == 'true') }}
      run: docker push ${{ steps.meta.outputs.tags }}
      shell: bash

    # We need to set docker tag properly for pull requests.  In those scenarios where no docker related files
    # were changed we need to use an existing image (e.g. main).  In cases where docker image is rebuilt we have
    # to use tag generated by the image build.
    - name: Set Docker Tag
      if: ${{ (steps.changed-files.outputs.any_changed == 'false') && (github.event_name == 'pull_request') }}
      run: echo "DOCKER_TAG=ghcr.io/${{github.repository_owner}}/cobalt-${docker_service}:${GITHUB_BASE_REF}" >> $GITHUB_ENV
      shell: bash
    - name: Set Docker Tag Output
      id: set-docker-tag-output
      run: |
        set -x
        if [ -z ${DOCKER_TAG+x} ]; then
          echo "::set-output name=docker_tag::${{ steps.meta.outputs.tags }}"
        else
          echo "::set-output name=docker_tag::$(echo $DOCKER_TAG)"
        fi
      shell: bash
